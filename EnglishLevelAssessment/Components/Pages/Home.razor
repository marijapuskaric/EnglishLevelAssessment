@page "/"
@rendermode InteractiveServer
@inject MaturaService MaturaService
@inject CollegeService CollegeService
@inject QuestionService QuestionService
@inject AnswerService AnswerService

@if (status == "start")
{
    <form>
        <div class="mb-3">
            <label class="form-label">Smjer:</label>
            <InputSelect @bind-Value=@studyProgramme class="form-select">
                @foreach (var i in studyProgrammes)
                {
                    <option Value="@i.Id">@i.Programme</option>
                }
            </InputSelect>
        </div>
        <div class="mb-3">
            <label class="form-label">Godina:</label>
            <InputSelect @bind-Value=@year class="form-select">
                @foreach (var i in years)
                {
                    <option Value="@i.Id">@i.Year</option>
                }
            </InputSelect>
        </div>
        <div class="mb-3">
            <label class="form-label">Razina mature iz engleskog jezika:</label>
            <InputSelect @bind-Value=@maturaLevel class="form-select">
                @foreach (var i in maturaLevels)
                {
                    <option Value="@i.Id">@i.MaturaLevel1</option>
                }
            </InputSelect>
        </div>
        <div class="mb-3">
            <label class="form-label">Ocjena mature iz engleskog jezika:</label>
            <InputSelect @bind-Value=@maturaGrade class="form-select">
                @foreach (var i in maturaGrades)
                {
                    <option Value="@i.Id">@i.Grade</option>
                }
            </InputSelect>
        </div>
    </form>
    <button @onclick="OnStart" class="btn btn-primary">Start</button>
}

@if (status == "next")
{
    <p>@count . @currentQuestion.Question1</p>
    <div class="d-flex flex-column p-2">
        <InputRadioGroup @bind-Value=@answer >
            @foreach(var i in answers)
            {
                <label class="d-flex p-2"><InputRadio Value="@i.Id" />@i.Answer1</label>
            }

        </InputRadioGroup>
    </div>
    if (count == questions.Count())
    {
        <button @onclick="OnFinish" class="btn btn-primary">Finish</button>
    }
    else
    {
        <button @onclick="OnNext" class="btn btn-primary">Next</button>
    }
    
}

@if (status == "finish")
{
    <p>Results!!!</p>
}

@code
{
    string status;

    List<StudyProgramme> studyProgrammes = new List<StudyProgramme>();
    List<AcademicYear> years = new List<AcademicYear>();
    List<MaturaLevel> maturaLevels = new List<MaturaLevel>();
    List<MaturaGrade> maturaGrades = new List<MaturaGrade>();

    int studyProgramme;
    int year;
    int maturaLevel;
    int maturaGrade;

    List<Question> questions = new List<Question>();
    Question currentQuestion = new Question();

    List<Answer> answers = new List<Answer>();
    int answer;
    int count = 0;

    protected override async Task OnInitializedAsync()
    {
        status = "start";
        studyProgrammes = await CollegeService.GetStudyProgrammes();
        years = await CollegeService.GetAcademicYears();
        maturaLevels = await MaturaService.GetMaturaLevels();
        maturaGrades = await MaturaService.GetMaturaGrades();
    }

    protected async void OnStart()
    {
        questions = await QuestionService.GetQuestions();
        count = 1;
        currentQuestion = questions.ElementAt(count - 1);
        answers = await AnswerService.GetAnswersForQuestion(currentQuestion.Id);
        status = "next";
    }

    protected async void OnNext()
    {
        count++;
        currentQuestion = questions.ElementAt(count - 1);
        answers = await AnswerService.GetAnswersForQuestion(currentQuestion.Id);
    }

    protected async void OnFinish()
    {
        status = "finish";
    }
}
